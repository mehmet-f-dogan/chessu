create table "public"."chapter" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone default now(),
    "name" text not null default ''::text,
    "title" text not null default ''::text,
    "description" text not null default ''::text
);


alter table "public"."chapter" enable row level security;

create table "public"."content" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone default now(),
    "title" text not null default ''::text,
    "data" json not null default '{}'::json
);


alter table "public"."content" enable row level security;

create table "public"."course" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone default now(),
    "name" text not null default ''::text,
    "title" text not null default ''::text,
    "description" text not null default ''::text,
    "image_url" text not null default ''::text,
    "price" bigint not null default '0'::bigint
);


alter table "public"."course" enable row level security;

create table "public"."course_chapter_content_mapping" (
    "id" bigint generated by default as identity not null,
    "course_id" bigint not null,
    "chapter_id" bigint not null,
    "content_id" bigint not null
);


alter table "public"."course_chapter_content_mapping" enable row level security;

CREATE UNIQUE INDEX chapter_pkey ON public.chapter USING btree (id);

CREATE UNIQUE INDEX content_pkey ON public.content USING btree (id);

CREATE UNIQUE INDEX course_chapter_content_mapping_pkey ON public.course_chapter_content_mapping USING btree (id);

CREATE UNIQUE INDEX course_id_key ON public.course USING btree (id);

CREATE UNIQUE INDEX course_name_key ON public.course USING btree (name);

CREATE UNIQUE INDEX course_pkey ON public.course USING btree (id);

alter table "public"."chapter" add constraint "chapter_pkey" PRIMARY KEY using index "chapter_pkey";

alter table "public"."content" add constraint "content_pkey" PRIMARY KEY using index "content_pkey";

alter table "public"."course" add constraint "course_pkey" PRIMARY KEY using index "course_pkey";

alter table "public"."course_chapter_content_mapping" add constraint "course_chapter_content_mapping_pkey" PRIMARY KEY using index "course_chapter_content_mapping_pkey";

alter table "public"."course" add constraint "course_id_key" UNIQUE using index "course_id_key";

alter table "public"."course" add constraint "course_name_key" UNIQUE using index "course_name_key";

alter table "public"."course_chapter_content_mapping" add constraint "course_chapter_content_mapping_chapter_id_fkey" FOREIGN KEY (chapter_id) REFERENCES chapter(id) ON DELETE RESTRICT not valid;

alter table "public"."course_chapter_content_mapping" validate constraint "course_chapter_content_mapping_chapter_id_fkey";

alter table "public"."course_chapter_content_mapping" add constraint "course_chapter_content_mapping_content_id_fkey" FOREIGN KEY (content_id) REFERENCES content(id) ON DELETE RESTRICT not valid;

alter table "public"."course_chapter_content_mapping" validate constraint "course_chapter_content_mapping_content_id_fkey";

alter table "public"."course_chapter_content_mapping" add constraint "course_chapter_content_mapping_course_id_fkey" FOREIGN KEY (course_id) REFERENCES course(id) ON DELETE RESTRICT not valid;

alter table "public"."course_chapter_content_mapping" validate constraint "course_chapter_content_mapping_course_id_fkey";

create policy "Enable read access for all users"
on "public"."chapter"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."content"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."course"
as permissive
for select
to public
using (true);


create policy "Enable read access for all users"
on "public"."course_chapter_content_mapping"
as permissive
for select
to public
using (true);



